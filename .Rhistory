hist(rnorm(200,38,6))
hist(rnorm(200,38,4))
hist(rnorm(200,38,3))
x <- data.frame(y = 25,x = 1, ymin= 15, ymax=35)
library(tidyverse)
ggplot(x)+
geom_pointrange(aes(ymin,ymax,x))
ggplot(x)+
geom_pointrange(aes(ymin=ymin,ymax=ymax,x=x))
ggplot(x)+
geom_point(aes(x=x,y=y))
Theme_HiDEF <- function (base_family = "Gill Sans MT", base_size = 11.5, plot_title_family = base_family,
plot_title_size = 18, plot_title_face = "bold", plot_title_margin = 10,
subtitle_family = base_family, subtitle_size = 12, subtitle_face = "plain",
subtitle_margin = 15, strip_text_family = base_family, strip_text_size = 12,
strip_text_face = "plain", caption_family = base_family,
caption_size = 9, caption_face = "italic", caption_margin = 10,
axis_text_size = base_size, axis_title_family = subtitle_family,
axis_title_size = 9, axis_title_face = "plain", axis_title_just = "rt",
plot_margin = margin(30, 30, 30, 30), grid_col = "#cccccc",
grid = TRUE, axis_col = "#cccccc", axis = FALSE, ticks = FALSE)
{
ret <- ggplot2::theme_minimal(base_family = base_family,
base_size = base_size)
ret <- ret + theme(legend.background = element_blank())
ret <- ret + theme(legend.key = element_blank())
if (inherits(grid, "character") | grid == TRUE) {
ret <- ret + theme(panel.grid = element_line(color = grid_col,
size = 0.2))
ret <- ret + theme(panel.grid.major = element_line(color = grid_col,
size = 0.2))
ret <- ret + theme(panel.grid.minor = element_line(color = grid_col,
size = 0.15))
if (inherits(grid, "character")) {
if (regexpr("X", grid)[1] < 0)
ret <- ret + theme(panel.grid.major.x = element_blank())
if (regexpr("Y", grid)[1] < 0)
ret <- ret + theme(panel.grid.major.y = element_blank())
if (regexpr("x", grid)[1] < 0)
ret <- ret + theme(panel.grid.minor.x = element_blank())
if (regexpr("y", grid)[1] < 0)
ret <- ret + theme(panel.grid.minor.y = element_blank())
}
}
else {
ret <- ret + theme(panel.grid = element_blank())
}
if (inherits(axis, "character") | axis == TRUE) {
ret <- ret + theme(axis.line = element_line(color = "#2b2b2b",
size = 0.15))
if (inherits(axis, "character")) {
axis <- tolower(axis)
if (regexpr("x", axis)[1] < 0) {
ret <- ret + theme(axis.line.x = element_blank())
}
else {
ret <- ret + theme(axis.line.x = element_line(color = axis_col,
size = 0.15))
}
if (regexpr("y", axis)[1] < 0) {
ret <- ret + theme(axis.line.y = element_blank())
}
else {
ret <- ret + theme(axis.line.y = element_line(color = axis_col,
size = 0.15))
}
}
else {
ret <- ret + theme(axis.line.x = element_line(color = axis_col,
size = 0.15))
ret <- ret + theme(axis.line.y = element_line(color = axis_col,
size = 0.15))
}
}
else {
ret <- ret + theme(axis.line = element_blank())
}
if (!ticks) {
ret <- ret + theme(axis.ticks = element_blank())
ret <- ret + theme(axis.ticks.x = element_blank())
ret <- ret + theme(axis.ticks.y = element_blank())
}
else {
ret <- ret + theme(axis.ticks = element_line(size = 0.15))
ret <- ret + theme(axis.ticks.x = element_line(size = 0.15))
ret <- ret + theme(axis.ticks.y = element_line(size = 0.15))
ret <- ret + theme(axis.ticks.length = grid::unit(5,
"pt"))
}
xj <- switch(tolower(substr(axis_title_just, 1, 1)), b = 0,
l = 0, m = 0.5, c = 0.5, r = 1, t = 1)
yj <- switch(tolower(substr(axis_title_just, 2, 2)), b = 0,
l = 0, m = 0.5, c = 0.5, r = 1, t = 1)
ret <- ret + theme(axis.text.x = element_text(size = axis_text_size,
margin = margin(t = 0)))
ret <- ret + theme(axis.text.y = element_text(size = axis_text_size,
margin = margin(r = 0)))
ret <- ret + theme(axis.title = element_text(size = axis_title_size,
family = axis_title_family))
ret <- ret + theme(axis.title.x = element_text(hjust = xj,
size = axis_title_size, family = axis_title_family,
face = axis_title_face))
ret <- ret + theme(axis.title.y = element_text(hjust = 0.5, vjust = 5,
size = axis_title_size, family = axis_title_family,
face = axis_title_face))
ret <- ret + theme(axis.title.y.right = element_text(hjust = yj,
size = axis_title_size, angle = 90, family = axis_title_family,
face = axis_title_face))
ret <- ret + theme(strip.text = element_text(hjust = 0,
size = strip_text_size,face="bold",
family = strip_text_family, color = "black"))
ret <- ret + theme(panel.spacing = grid::unit(2, "lines"))
ret <- ret + theme(plot.title = element_text(hjust = 0,
size = plot_title_size, margin = margin(b = plot_title_margin),
family = plot_title_family, face = plot_title_face))
ret <- ret + theme(plot.subtitle = element_text(hjust = 0,
size = subtitle_size, margin = margin(b = subtitle_margin),
family = subtitle_family, face = subtitle_face))
ret <- ret + theme(plot.caption = element_text(hjust = 1,
size = caption_size, margin = margin(t = caption_margin),
family = caption_family, face = caption_face))
ret <- ret + theme(plot.margin = plot_margin)
ret <- ret + theme(strip.background = element_rect(color = "black", fill = "lightgrey"))
ret
}
ggplot(x)+
geom_point(aes(x=x,y=y))+
Theme_HiDEF()
help(geom_bar)
help(geom_boxplot)
ggplot(x)+
geom_point(aes(x=x,y=y))+
geom_boxplot(aes(x=x,ymin=ymin,ymax=ymax),stat="identity")+
Theme_HiDEF()
ggplot(x)+
geom_point(aes(x=x,y=y))+
geom_errorbar(aes(ymin=ymin,ymax=ymax,x=x),width=0,size=2,colour='lightblue')+
Theme_HiDEF()
library(extrafont)
loadfonts()
ggplot(x)+
geom_point(aes(x=x,y=y))+
geom_errorbar(aes(ymin=ymin,ymax=ymax,x=x),width=0,size=2,colour='lightblue')+
Theme_HiDEF()
ggplot(x)+
geom_errorbar(aes(ymin=ymin,ymax=ymax,x=x),width=0,size=2,colour='lightblue')+
geom_point(aes(x=x,y=y))+
Theme_HiDEF()
ggplot(x)+
geom_errorbar(aes(ymin=ymin,ymax=ymax,x=x),width=0,size=2,colour='lightblue')+
geom_point(aes(x=x,y=y))+
Theme_HiDEF()+
scale_y_continuous(limits=c(0,50))
ggplot(x)+
geom_errorbar(aes(ymin=ymin,ymax=ymax,x=x),width=0,size=2,colour='lightblue')+
geom_point(aes(x=x,y=y))+
Theme_HiDEF()+
scale_y_continuous(limits=c(0,50))+
scale_x_continuous(limits=c(0.975,1.025))
ggplot(x)+
geom_errorbar(aes(ymin=ymin,ymax=ymax,x=x),width=0,size=2,colour='lightblue')+
geom_point(aes(x=x,y=y))+
ylab("Height above MSL (m)")+
Theme_HiDEF()+
scale_y_continuous(limits=c(0,50))+
scale_x_continuous(limits=c(0.975,1.025))+
xlab("")
ggplot(x)+
geom_errorbar(aes(ymin=ymin,ymax=ymax,x=x),width=0,size=2,colour='lightblue')+
geom_point(aes(x=x,y=y))+
ylab("Height above MSL (m)")+
Theme_HiDEF(axis_title_size = 18)+
scale_y_continuous(limits=c(0,50))+
scale_x_continuous(limits=c(0.975,1.025))+
xlab("")
ggplot(x)+
geom_errorbar(aes(ymin=ymin,ymax=ymax,x=x),width=0,size=2,colour='lightblue')+
geom_point(aes(x=x,y=y))+
ylab("Height above MSL (m)")+
Theme_HiDEF(axis_title_size = 18)+
scale_y_continuous(limits=c(0,50))+
scale_x_continuous(limits=c(0.975,1.025),values=c())+
xlab("")
ggplot(x)+
geom_errorbar(aes(ymin=ymin,ymax=ymax,x=x),width=0,size=2,colour='lightblue')+
geom_point(aes(x=x,y=y))+
ylab("Height above MSL (m)")+
Theme_HiDEF(axis_title_size = 18)+
scale_y_continuous(limits=c(0,50))+
scale_x_continuous(limits=c(0.975,1.025),breaks=c())+
xlab("")
ggplot(x)+
geom_errorbar(aes(ymin=ymin,ymax=ymax,x=x),width=0,size=2,colour='lightblue')+
geom_point(aes(x=x,y=y))+
ylab("Height above MSL (m)")+
Theme_HiDEF(axis_title_size = 18)+
scale_y_continuous(limits=c(0,50))+
scale_x_continuous(limits=c(0.975,1.025),breaks=c())+
geom_hline(aes(y = 0),size=2)+
xlab("")
ggplot(x)+
geom_errorbar(aes(ymin=ymin,ymax=ymax,x=x),width=0,size=2,colour='lightblue')+
geom_point(aes(x=x,y=y))+
ylab("Height above MSL (m)")+
Theme_HiDEF(axis_title_size = 18)+
scale_y_continuous(limits=c(0,50))+
scale_x_continuous(limits=c(0.975,1.025),breaks=c())+
geom_hline(aes(yintercept = 0),size=2)+
xlab("")
ggplot(x)+
geom_errorbar(aes(ymin=ymin,ymax=ymax,x=x),width=0,size=2,colour='lightblue')+
geom_point(aes(x=x,y=y))+
ylab("Height above MSL (m)")+
Theme_HiDEF(axis_title_size = 18,axis_title_family = "Arial")+
scale_y_continuous(limits=c(0,50))+
scale_x_continuous(limits=c(0.975,1.025),breaks=c())+
geom_hline(aes(yintercept = 0),size=2)+
xlab("")
ggplot(x)+
geom_errorbar(aes(ymin=ymin,ymax=ymax,x=x),width=0,size=4,colour='lightblue')+
geom_point(aes(x=x,y=y))+
ylab("Height above MSL (m)")+
Theme_HiDEF(axis_title_size = 18,axis_title_family = "Arial")+
scale_y_continuous(limits=c(0,50))+
scale_x_continuous(limits=c(0.975,1.025),breaks=c())+
geom_hline(aes(yintercept = 0),size=2)+
xlab("")
ggplot(x)+
geom_errorbar(aes(ymin=ymin,ymax=ymax,x=x),width=0,size=8,colour='lightblue')+
geom_point(aes(x=x,y=y))+
ylab("Height above MSL (m)")+
Theme_HiDEF(axis_title_size = 18,axis_title_family = "Arial")+
scale_y_continuous(limits=c(0,50))+
scale_x_continuous(limits=c(0.975,1.025),breaks=c())+
geom_hline(aes(yintercept = 0),size=2)+
xlab("")
X <- data.frame(x=runif(100),y=runif(100))
ggplot(X,aes(x=x,y=y))+Theme_HiDEF()
Theme_HiDEF <- function (base_family = "Gill Sans MT", base_size = 11.5, plot_title_family = base_family,
plot_title_size = 18, plot_title_face = "bold", plot_title_margin = 10,
subtitle_family = base_family, subtitle_size = 12, subtitle_face = "plain",
subtitle_margin = 15, strip_text_family = base_family, strip_text_size = 12,
strip_text_face = "plain", caption_family = base_family,
caption_size = 9, caption_face = "italic", caption_margin = 10,
axis_text_size = base_size, axis_title_family = subtitle_family,
axis_title_size = 9, axis_title_face = "plain", axis_title_just = "rt",
plot_margin = margin(30, 30, 30, 30), grid_col = "#cccccc",
grid = TRUE, axis_col = "#cccccc", axis = FALSE, ticks = FALSE)
{
ret <- ggplot2::theme_minimal(base_family = base_family,
base_size = base_size)
ret <- ret + theme(legend.background = element_blank())
ret <- ret + theme(legend.key = element_blank())
if (inherits(grid, "character") | grid == TRUE) {
ret <- ret + theme(panel.grid = element_line(color = grid_col,
size = 0.2))
ret <- ret + theme(panel.grid.major = element_line(color = grid_col,
size = 0.2))
ret <- ret + theme(panel.grid.minor = element_line(color = grid_col,
size = 0.15))
if (inherits(grid, "character")) {
if (regexpr("X", grid)[1] < 0)
ret <- ret + theme(panel.grid.major.x = element_blank())
if (regexpr("Y", grid)[1] < 0)
ret <- ret + theme(panel.grid.major.y = element_blank())
if (regexpr("x", grid)[1] < 0)
ret <- ret + theme(panel.grid.minor.x = element_blank())
if (regexpr("y", grid)[1] < 0)
ret <- ret + theme(panel.grid.minor.y = element_blank())
}
}
else {
ret <- ret + theme(panel.grid = element_blank())
}
if (inherits(axis, "character") | axis == TRUE) {
ret <- ret + theme(axis.line = element_line(color = "#2b2b2b",
size = 0.15))
if (inherits(axis, "character")) {
axis <- tolower(axis)
if (regexpr("x", axis)[1] < 0) {
ret <- ret + theme(axis.line.x = element_blank())
}
else {
ret <- ret + theme(axis.line.x = element_line(color = axis_col,
size = 0.15))
}
if (regexpr("y", axis)[1] < 0) {
ret <- ret + theme(axis.line.y = element_blank())
}
else {
ret <- ret + theme(axis.line.y = element_line(color = axis_col,
size = 0.15))
}
}
else {
ret <- ret + theme(axis.line.x = element_line(color = axis_col,
size = 0.15))
ret <- ret + theme(axis.line.y = element_line(color = axis_col,
size = 0.15))
}
}
else {
ret <- ret + theme(axis.line = element_blank())
}
if (!ticks) {
ret <- ret + theme(axis.ticks = element_blank())
ret <- ret + theme(axis.ticks.x = element_blank())
ret <- ret + theme(axis.ticks.y = element_blank())
}
else {
ret <- ret + theme(axis.ticks = element_line(size = 0.15))
ret <- ret + theme(axis.ticks.x = element_line(size = 0.15))
ret <- ret + theme(axis.ticks.y = element_line(size = 0.15))
ret <- ret + theme(axis.ticks.length = grid::unit(5,
"pt"))
}
xj <- switch(tolower(substr(axis_title_just, 1, 1)), b = 0,
l = 0, m = 0.5, c = 0.5, r = 1, t = 1)
yj <- switch(tolower(substr(axis_title_just, 2, 2)), b = 0,
l = 0, m = 0.5, c = 0.5, r = 1, t = 1)
ret <- ret + theme(axis.text.x = element_text(size = axis_text_size,
margin = margin(t = 0)))
ret <- ret + theme(axis.text.y = element_text(size = axis_text_size,
margin = margin(r = 0)))
ret <- ret + theme(axis.title = element_text(size = axis_title_size,
family = axis_title_family))
ret <- ret + theme(axis.title.x = element_text(hjust = xj,
size = axis_title_size, family = axis_title_family,
face = axis_title_face))
ret <- ret + theme(axis.title.y = element_text(hjust = 0.5, vjust = 5,
size = axis_title_size, family = axis_title_family,
face = axis_title_face))
ret <- ret + theme(axis.title.y.right = element_text(hjust = yj,
size = axis_title_size, angle = 90, family = axis_title_family,
face = axis_title_face))
ret <- ret + theme(strip.text = element_text(hjust = 0,
size = strip_text_size,face="bold",
family = strip_text_family, color = "black"))
ret <- ret + theme(panel.spacing = grid::unit(2, "lines"))
ret <- ret + theme(plot.title = element_text(hjust = 0,
size = plot_title_size, margin = margin(b = plot_title_margin),
family = plot_title_family, face = plot_title_face))
ret <- ret + theme(plot.subtitle = element_text(hjust = 0,
size = subtitle_size, margin = margin(b = subtitle_margin),
family = subtitle_family, face = subtitle_face))
ret <- ret + theme(plot.caption = element_text(hjust = 1,
size = caption_size, margin = margin(t = caption_margin),
family = caption_family, face = caption_face))
ret <- ret + theme(plot.margin = plot_margin)
ret <- ret + theme(strip.background = element_rect(color = "black", fill = "lightgrey"))
ret
}
ggplot(X,aes(x=x,y=y))+Theme_HiDEF()
ggplot(X,aes(x=x,y=y))+geom_point()+Theme_HiDEF()
devtools::document()
remove(Theme_HiDEF())
remove(Theme_HiDEF
)
devtools::document()
devtools::document()
??Theme_HiDEF
View(X)
remove(X)
?Theme_HiDEF
library(HiDef)
devtools::document()
usethis::use_package(sp)
usethis::use_package("sp")
usethis::use_package("sf")
usethis::use_package("tidyverse")
usethis::use_package("ggplot2")
devtools::document()
library(HiDef)
devtools::install_github("https://github.com/HiDef-Aerial-Surveying/HiDEF.git")
detach("package:HiDef", unload = TRUE)
devtools::install_github("https://github.com/HiDef-Aerial-Surveying/HiDEF.git")
remove.packages("HiDef")
devtools::document()
library(HiDef)
remove.packages("HiDef")
devtools::install_github("https://github.com/HiDef-Aerial-Surveying/HiDEF.git")
remove.packages("HiDef")
devtools::install_github("https://github.com/HiDef-Aerial-Surveying/HiDEF.git")
devtools::install_github("https://github.com/HiDef-Aerial-Surveying/HiDEF.git")
